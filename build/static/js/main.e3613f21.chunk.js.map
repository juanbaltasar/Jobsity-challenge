{"version":3,"sources":["logo.svg","Components/MessageList/MessageList.js","Components/Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["MessageList","useState","messages","setMessages","useEffect","axios","get","then","res","console","log","data","map","item","index","className","user","message","Login","props","Username","setUsername","Password","setPassword","type","value","onChange","e","target","placeholder","onClick","post","userName","password","val","isValid","setIsLoggedIn","socket","io","App","isLoggedIn","username","messageValue","setMessageValue","on","startsWith","emit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,6BC6BAA,MA1Bf,WACI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAWA,OAPAC,qBAAU,WACNC,IAAMC,IAHU,aAGOC,MAAK,SAACC,GAC3BC,QAAQC,IAAIF,EAAIG,MAChBR,EAAYK,EAAIG,WAEjB,IAGD,8BACKT,EAASU,KAAI,SAACC,EAAMC,GACjB,OACI,sBAAKC,UAAU,eAAf,UACI,4BAAIF,EAAKG,OACT,6BAAKH,EAAKI,YAFqBH,SCSxCI,MAzBf,SAAeC,GACX,MAAgClB,mBAAS,IAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KACA,EAAgCpB,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KAaA,OACI,gCACI,uCACA,uBAAOC,KAAK,OAAOC,MAAOL,EAAUM,SAAU,SAACC,GAAON,EAAYM,EAAEC,OAAOH,QAASI,YAAY,aAChG,uBAAOL,KAAK,WAAWC,MAAOH,EAAUI,SAAU,SAACC,GAAOJ,EAAYI,EAAEC,OAAOH,QAASI,YAAY,aACpG,wBAAQC,QAhBhB,WACIzB,IAAM0B,KAAK,gBAAiB,CACxBC,SAAUZ,EACVa,SAAUX,IACXf,MAAK,SAAC2B,GACLzB,QAAQC,IAAIwB,EAAIvB,KAAKwB,SACrBhB,EAAME,YAAYD,GAClBD,EAAMiB,cAAcF,EAAIvB,KAAKwB,aAS7B,yB,QCbNE,EAASC,eA6CAC,MA3Cf,WACE,MAAgCtC,mBAAS,IAAzC,mBAAiBE,GAAjB,WACA,EAAoCF,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBJ,EAAnB,KACA,EAAgCnC,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiBpB,EAAjB,KACA,EAAwCpB,mBAAS,IAAjD,mBAAOyC,EAAP,KAAqBC,EAArB,KAwBA,OAtBAN,EAAOO,GAAG,cAAc,SAAAjC,GACtBF,QAAQC,IAAI,eACZP,EAAYQ,MAqBZ,mCACI6B,EACA,gCACE,cAAC,EAAD,IACA,uBAAOhB,KAAK,OAAOK,YAAY,kBAAkBJ,MAAOiB,EAAchB,SAAU,SAACC,GAAD,OAAOgB,EAAgBhB,EAAEC,OAAOH,UAChH,wBAAQK,QAhBhB,WACMY,EAAaG,WAAW,WAC1BxC,IAAM0B,KAAK,iBAAkB,CAACd,QAASyB,IAGvCL,EAAOS,KAAK,aAAc,CAAC7B,QAASyB,EAAc1B,KAAMyB,IAE1DE,EAAgB,KASV,sBAGF,cAAC,EAAD,CAAOtB,YAAaA,EAAae,cAAeA,OCrCzCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3613f21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction MessageList() {\r\n    const [messages, setMessages] = useState([])\r\n\r\n    const MessagesUrl = '/messages'\r\n\r\n    useEffect(() => {\r\n        axios.get(MessagesUrl).then((res) => {\r\n          console.log(res.data)\r\n          setMessages(res.data)\r\n        })\r\n      }, [])\r\n\r\n    return(\r\n        <div>\r\n            {messages.map((item, index) => {\r\n                return(\r\n                    <div className='message-item' key={index}>\r\n                        <p>{item.user}</p>\r\n                        <h6>{item.message}</h6>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageList;","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Login(props) {\r\n    const [Username, setUsername] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n\r\n    function handleLoginClick() {\r\n        axios.post('/login/verify', {\r\n            userName: Username,\r\n            password: Password\r\n        }).then((val) => {\r\n            console.log(val.data.isValid)\r\n            props.setUsername(Username)\r\n            props.setIsLoggedIn(val.data.isValid)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>Login</h2>\r\n            <input type=\"text\" value={Username} onChange={(e) => {setUsername(e.target.value)}} placeholder=\"Username\"/>\r\n            <input type=\"password\" value={Password} onChange={(e) => {setPassword(e.target.value)}} placeholder=\"Password\"/>\r\n            <button onClick={handleLoginClick}>Log In!</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import logo from './logo.svg';\nimport './App.css';\nimport MessageList from './Components/MessageList/MessageList.js'\nimport Login from './Components/Login/Login.js'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { io } from \"socket.io-client\";\n\nconst MessagesUrl = '/messages'\n\nconst socket = io(/*'https://localhost:4000', {transports: ['websocket']}*/)\n\nfunction App() {\n  const [messages, setMessages] = useState([])\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [username, setUsername] = useState(\"\")\n  const [messageValue, setMessageValue] = useState(\"\")\n\n  socket.on(\"NewMessage\", data => {\n    console.log('New message')\n    setMessages(data)\n  })\n\n  // useEffect(() => {\n  //   axios.get(MessagesUrl).then((res) => {\n  //     console.log(res.data)\n  //     setMessages(res.data)\n  //   })\n  // }, [])\n\n  function handleClick() {\n    if (messageValue.startsWith('/stock=')) {\n      axios.post('/StockQuoteBot', {message: messageValue})\n    }\n    else{\n      socket.emit('NewMessage', {message: messageValue, user: username})\n    }\n    setMessageValue('')\n  }\n\n  return (\n    <>\n      { isLoggedIn ? (\n        <div>\n          <MessageList  />\n          <input type=\"text\" placeholder=\"Write a message\" value={messageValue} onChange={(e) => setMessageValue(e.target.value) } />\n          <button onClick={handleClick}>Send!</button>\n        </div>\n      ) :  (\n        <Login setUsername={setUsername} setIsLoggedIn={setIsLoggedIn} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}