{"version":3,"sources":["logo.svg","Components/MessageList/MessageList.js","Components/Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["MessageList","props","messages","map","item","index","className","user","message","Login","useState","Username","setUsername","Password","setPassword","value","onChange","e","target","placeholder","onClick","axios","post","userName","password","then","val","console","log","data","isValid","setIsLoggedIn","App","setMessages","isLoggedIn","username","messageValue","setMessageValue","socket","io","on","useEffect","get","res","type","emit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,YCeAA,MAff,SAAqBC,GACjB,OACI,8BACKA,EAAMC,SAASC,KAAI,SAACC,EAAMC,GACvB,OACI,sBAAKC,UAAU,eAAf,UACI,4BAAIF,EAAKG,OACT,6BAAKH,EAAKI,YAFqBH,S,iBCuBxCI,MAzBf,SAAeR,GACX,MAAgCS,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAaA,OACI,gCACI,uCACA,uBAAOC,MAAOJ,EAAUK,SAAU,SAACC,GAAOL,EAAYK,EAAEC,OAAOH,QAASI,YAAY,aACpF,uBAAOJ,MAAOF,EAAUG,SAAU,SAACC,GAAOH,EAAYG,EAAEC,OAAOH,QAASI,YAAY,aACpF,wBAAQC,QAhBhB,WACIC,IAAMC,KAAK,gBAAiB,CACxBC,SAAUZ,EACVa,SAAUX,IACXY,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,KAAKC,SACrB7B,EAAMW,YAAYD,GAClBV,EAAM8B,cAAcL,EAAIG,KAAKC,aAS7B,yB,QC0BGE,MAvCf,WACE,MAAgCtB,mBAAS,IAAzC,mBAAOR,EAAP,KAAiB+B,EAAjB,KACA,EAAoCvB,oBAAS,GAA7C,mBAAOwB,EAAP,KAAmBH,EAAnB,KACA,EAAgCrB,mBAAS,IAAzC,mBAAOyB,EAAP,KAAiBvB,EAAjB,KACA,EAAwCF,mBAAS,IAAjD,mBAAO0B,EAAP,KAAqBC,EAArB,KAEMC,EAASC,eAkBf,OAhBAD,EAAOE,GAAG,cAAc,SAAAX,GACtBF,QAAQC,IAAI,eACZK,EAAYJ,MAGdY,qBAAU,WACRpB,IAAMqB,IAhBU,aAgBOjB,MAAK,SAACkB,GAC3BhB,QAAQC,IAAIe,EAAId,MAChBI,EAAYU,EAAId,WAEjB,IAOD,mCACIK,EACA,gCACE,cAAC,EAAD,CAAahC,SAAUA,IACvB,uBAAO0C,KAAK,OAAOzB,YAAY,kBAAkBJ,MAAOqB,EAAcpB,SAAU,SAACC,GAAD,OAAOoB,EAAgBpB,EAAEC,OAAOH,UAChH,wBAAQK,QAVhB,WACEkB,EAAOO,KAAK,aAAc,CAACrC,QAAS4B,EAAc7B,KAAM4B,KASlD,sBAGF,cAAC,EAAD,CAAOvB,YAAaA,EAAamB,cAAeA,OC/BzCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.46060657.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function MessageList(props) {\r\n    return(\r\n        <div>\r\n            {props.messages.map((item, index) => {\r\n                return(\r\n                    <div className='message-item' key={index}>\r\n                        <p>{item.user}</p>\r\n                        <h6>{item.message}</h6>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageList;","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Login(props) {\r\n    const [Username, setUsername] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n\r\n    function handleLoginClick() {\r\n        axios.post('/login/verify', {\r\n            userName: Username,\r\n            password: Password\r\n        }).then((val) => {\r\n            console.log(val.data.isValid)\r\n            props.setUsername(Username)\r\n            props.setIsLoggedIn(val.data.isValid)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>Login</h2>\r\n            <input value={Username} onChange={(e) => {setUsername(e.target.value)}} placeholder=\"Username\"/>\r\n            <input value={Password} onChange={(e) => {setPassword(e.target.value)}} placeholder=\"Password\"/>\r\n            <button onClick={handleLoginClick}>Log In!</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import logo from './logo.svg';\nimport './App.css';\nimport MessageList from './Components/MessageList/MessageList.js'\nimport Login from './Components/Login/Login.js'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { io } from \"socket.io-client\";\n\nconst MessagesUrl = '/messages'\n\nfunction App() {\n  const [messages, setMessages] = useState([])\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [username, setUsername] = useState(\"\")\n  const [messageValue, setMessageValue] = useState(\"\")\n\n  const socket = io(/*'https://localhost:4000', {transports: ['websocket']}*/)\n\n  socket.on(\"NewMessage\", data => {\n    console.log('New message')\n    setMessages(data)\n  })\n\n  useEffect(() => {\n    axios.get(MessagesUrl).then((res) => {\n      console.log(res.data)\n      setMessages(res.data)\n    })\n  }, [])\n\n  function handleClick() {\n    socket.emit('NewMessage', {message: messageValue, user: username})\n  }\n\n  return (\n    <>\n      { isLoggedIn ? (\n        <div>\n          <MessageList messages={messages} />\n          <input type=\"text\" placeholder=\"Write a message\" value={messageValue} onChange={(e) => setMessageValue(e.target.value) } />\n          <button onClick={handleClick}>Send!</button>\n        </div>\n      ) :  (\n        <Login setUsername={setUsername} setIsLoggedIn={setIsLoggedIn} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}