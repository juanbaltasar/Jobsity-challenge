{"version":3,"sources":["logo.svg","Components/MessageList/MessageList.js","App.js","reportWebVitals.js","index.js"],"names":["MessageList","props","messages","map","item","index","className","user","message","App","useState","setMessages","username","messageValue","setMessageValue","socket","io","on","data","console","log","useEffect","axios","get","then","res","type","placeholder","value","onChange","e","target","onClick","emit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,YCeAA,MAff,SAAqBC,GACjB,OACI,8BACKA,EAAMC,SAASC,KAAI,SAACC,EAAMC,GACvB,OACI,sBAAKC,UAAU,eAAf,UACI,4BAAIF,EAAKG,OACT,6BAAKH,EAAKI,YAFqBH,S,yBCqCxCI,MAjCf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBS,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAAOE,EAAP,KACA,GADA,KACwCF,mBAAS,KAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAASC,eAkBf,OAhBAD,EAAOE,GAAG,cAAc,SAAAC,GACtBC,QAAQC,IAAI,eACZT,EAAYO,MAGdG,qBAAU,WACRC,IAAMC,IAAI,mCAAmCC,MAAK,SAACC,GACjDN,QAAQC,IAAIK,EAAIP,MAChBP,EAAYc,EAAIP,WAEjB,IAOD,gCACE,cAAC,EAAD,CAAahB,SAAUA,IACvB,uBAAOwB,KAAK,OAAOC,YAAY,kBAAkBC,MAAOf,EAAcgB,SAAU,SAACC,GAAD,OAAOhB,EAAgBgB,EAAEC,OAAOH,UAChH,wBAAQI,QARZ,WACEjB,EAAOkB,KAAK,aAAc,CAACzB,QAASK,EAAcN,KAAMK,KAOtD,uBCzBSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21ea1b9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function MessageList(props) {\r\n    return(\r\n        <div>\r\n            {props.messages.map((item, index) => {\r\n                return(\r\n                    <div className='message-item' key={index}>\r\n                        <p>{item.user}</p>\r\n                        <h6>{item.message}</h6>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageList;","import logo from './logo.svg';\nimport './App.css';\nimport MessageList from './Components/MessageList/MessageList.js'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { io } from \"socket.io-client\";\n\nconst url = '/messages'\n\nfunction App() {\n  const [messages, setMessages] = useState([])\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [username, setUsername] = useState(\"\")\n  const [messageValue, setMessageValue] = useState(\"\")\n\n  const socket = io(/*'https://localhost:4000', {transports: ['websocket']}*/)\n\n  socket.on(\"NewMessage\", data => {\n    console.log('New message')\n    setMessages(data)\n  })\n\n  useEffect(() => {\n    axios.get('https://localhost:4000/messages').then((res) => {\n      console.log(res.data)\n      setMessages(res.data)\n    })\n  }, [])\n\n  function handleClick() {\n    socket.emit('NewMessage', {message: messageValue, user: username})\n  }\n\n  return (\n    <div>\n      <MessageList messages={messages} />\n      <input type=\"text\" placeholder=\"Write a message\" value={messageValue} onChange={(e) => setMessageValue(e.target.value) } />\n      <button onClick={handleClick}>Send!</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}